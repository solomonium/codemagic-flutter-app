workflows:
  ios-workflow:
    name: iOS Workflow
    instance_type: mac_mini_m2
    max_build_duration: 120
    environment:
      vars:
        FIREBASE_APP_ID: "1:947149653644:ios:f65e080c90dfff03f99da9"
        GOOGLE_APPLICATION_CREDENTIALS_BASE64: $GOOGLE_APPLICATION_CREDENTIALS_BASE64
      flutter: stable
      xcode: latest
      cocoapods: default
    scripts:
      - name: Install Flutter packages
        script: flutter pub get

      - name: Install CocoaPods
        script: |
          cd ios
          pod install
          cd ..

      - name: Build IPA
        script: |
          flutter build ipa --release --no-codesign
          mkdir -p build/ios/ipa/Payload
          cp -r build/ios/iphoneos/Runner.app build/ios/ipa/Payload/
          cd build/ios/ipa
          zip -r app.ipa Payload
          rm -rf Payload
          echo "IPA generated at build/ios/ipa/app.ipa"

      - name: Distribute to Firebase
        script: |
          # Install required tools
          brew install curl jq || true

          # Decode service account JSON
          echo "$GOOGLE_APPLICATION_CREDENTIALS_BASE64" | base64 --decode > /tmp/service-account.json
          export GOOGLE_APPLICATION_CREDENTIALS="/tmp/service-account.json"

          # Get Firebase access token
          ACCESS_TOKEN=$(curl -s "https://oauth2.googleapis.com/token" \
            -d "grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer&assertion=$(python3 -c 'import json, time, jwt; service_account = json.load(open("/tmp/service-account.json")); print(jwt.encode({"iss": service_account["client_email"], "scope": "https://www.googleapis.com/auth/cloud-platform", "aud": "https://oauth2.googleapis.com/token", "exp": int(time.time()) + 3600, "iat": int(time.time())}, service_account["private_key"], algorithm="RS256"))')" \
            | jq -r '.access_token')

          # Upload and distribute IPA
          UPLOAD_RESPONSE=$(curl -X POST \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/octet-stream" \
            --data-binary @build/ios/ipa/app.ipa \
            "https://firebaseappdistribution.googleapis.com/upload/v1/projects/-/apps/$FIREBASE_APP_ID/releases:upload")

          UPLOAD_TOKEN=$(echo "$UPLOAD_RESPONSE" | jq -r '.token')
          if [ -z "$UPLOAD_TOKEN" ]; then
            echo "❌ Failed to upload IPA: $UPLOAD_RESPONSE"
            exit 1
          fi

          DISTRIBUTE_RESPONSE=$(curl -X POST \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{\"testerGroups\": [\"testers\"], \"releaseNotes\": {\"text\": \"Build $CM_BUILD_NUMBER - Unsigned IPA\"}}" \
            "https://firebaseappdistribution.googleapis.com/v1/projects/-/apps/$FIREBASE_APP_ID/releases:distribute?upload_token=$UPLOAD_TOKEN")

          if echo "$DISTRIBUTE_RESPONSE" | grep -q "error"; then
            echo "❌ Distribution failed: $DISTRIBUTE_RESPONSE"
            exit 1
          else
            echo "✅ IPA distributed successfully!"
          fi

    artifacts:
      - build/ios/ipa/app.ipa

    publishing:
      email:
        recipients:
          - laleye.solomon@yahoo.com
          - laleyesolomon2@gmail.com
          - laleyesolomon3@gmail.com
          - nihal@nevercode.io
        notify:
          success: true
          failure: true

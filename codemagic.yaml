workflows:
  ios-workflow:
    name: iOS Workflow
    instance_type: mac_mini_m2
    max_build_duration: 120
    environment:
      vars:
        FIREBASE_APP_ID: "1:1234567890:ios:abcd1234abcd5678" # <-- Replace with your Firebase App ID
        GOOGLE_APPLICATION_CREDENTIALS: $GOOGLE_APPLICATION_CREDENTIALS # <-- Use Codemagic Environment Variable
      flutter: stable
      xcode: latest # <-- Set to a specific version if needed (e.g., 14.3, 15.0)
      cocoapods: default
    scripts:
      - name: Get Flutter packages
        script: |
          flutter packages pub get

      - name: Install pods
        script: |
          find . -name "Podfile" -execdir pod install \;

      - name: Flutter analyze
        script: |
          flutter analyze

      - name: Flutter unit tests
        script: |
          flutter test
        ignore_failure: true

      - name: Flutter build ipa
        script: |
          flutter build ipa --release --no-codesign
          mkdir -p build/ios/ipa
          cp -r build/ios/iphoneos/Runner.app build/ios/ipa/ || echo "No IPA files found"

      - name: Distribute to Firebase App Distribution
        script: |
          # Check if Firebase CLI is already installed
          if ! command -v firebase &> /dev/null; then
            echo "Installing Firebase CLI..."
            npm install -g firebase-tools
          else
            echo "Firebase CLI is already installed."
          fi

          # Authenticate with Firebase using the service account JSON
          echo "Authenticating with Firebase..."
          export GOOGLE_APPLICATION_CREDENTIALS="$(echo $GOOGLE_APPLICATION_CREDENTIALS | base64 --decode)"
          echo "$GOOGLE_APPLICATION_CREDENTIALS" > /tmp/service-account.json
          export GOOGLE_APPLICATION_CREDENTIALS="/tmp/service-account.json"

          # Distribute the app bundle
          echo "Distributing app bundle to Firebase App Distribution..."
          firebase appdistribution:distribute build/ios/ipa/Runner.app \
            --app $FIREBASE_APP_ID \
            --groups "testers" \
            --release-notes "Build ${CM_BUILD_NUMBER} - Unsigned iOS App"

    artifacts:
      - build/ios/ipa/Runner.app

    publishing:
      # Email notifications
      email:
        recipients:
          - laleye.solomon@yahoo.com
          - laleyesolomon2@gmail.com
          - laleyesolomon3@gmail.com
          - nihal@nevercode.io
        notify:
          success: true # To receive a notification when a build succeeds
          failure: false # To not receive a notification when a build fails
